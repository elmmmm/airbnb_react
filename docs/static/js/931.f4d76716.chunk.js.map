{"version":3,"file":"static/js/931.f4d76716.chunk.js","mappings":"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","sources":["components/room-item/style.js","components/room-item/index.jsx","views/entire/style.js","views/entire/c-cpns/entire-filter/style.js","views/entire/c-cpns/entire-filter/index.jsx","store/modules/entire/actionCreators.js","services/modules/entire.js","views/entire/c-cpns/entire-rooms/style.js","views/entire/c-cpns/entire-rooms/index.jsx","views/entire/c-cpns/entire-pagination/style.js","views/entire/c-cpns/entire-pagination/index.jsx","views/entire/index.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ItemWrapper = styled.div`\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n  width: ${props => props.$itemWidth};\r\n  padding: 8px;\r\n\r\n  .inner {\r\n    width: 100%;\r\n  }\r\n\r\n  .cover {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: 66.66% 8px 0;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n\r\n    img {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  .slider{\r\n    position: relative;\r\n    cursor: pointer;\r\n    &:hover{\r\n      .control{\r\n        display: flex;\r\n      }\r\n    }\r\n    .control{\r\n      position: absolute;\r\n      z-index: 1;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      bottom: 0;\r\n      display: none;\r\n      justify-content: space-between;\r\n      color: #fff;\r\n      .btn{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 83px;\r\n        height: 100%;\r\n        background: linear-gradient(to left, transparent 0%, rgba(0, 0, 0, 0.25) 100%);\r\n        &.right {\r\n          background: linear-gradient(to right, transparent 0%, rgba(0, 0, 0, 0.25) 100%);\r\n        }\r\n      }\r\n    }\r\n    .indicator {\r\n      position: absolute;\r\n      z-index: 9;\r\n      bottom: 10px;\r\n      left: 0;\r\n      right: 0;\r\n      width: 30%;\r\n      margin: 0 auto;\r\n\r\n      .item {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        /* 14.29% 最多显示7个圆点 */\r\n        width: 14.29%;\r\n\r\n        .dot {\r\n          width: 6px;\r\n          height: 6px;\r\n          background-color: #fff;\r\n          border-radius: 50%;\r\n\r\n          &.active {\r\n            width: 8px;\r\n            height: 8px;\r\n            background-color: red;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .desc {\r\n    margin: 10px 0 5px;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    color: ${props => props.$verifyColor};\r\n  }\r\n\r\n  .name {\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n\r\n    overflow: hidden;  \r\n    text-overflow: ellipsis; \r\n    display: -webkit-box; \r\n    -webkit-line-clamp: 2; \r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  .price {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  .bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: ${props => props.theme.text.primaryColor};\r\n\r\n    .count {\r\n      margin: 0 2px 0 4px;\r\n    }\r\n\r\n    .MuiRating-decimal {\r\n      margin-right: -2px;\r\n    }\r\n  }\r\n`","import PropTypes from \"prop-types\";\r\nimport React, { memo, useState,useRef } from \"react\";\r\nimport Rating from '@mui/material/Rating';\r\nimport { Carousel } from 'antd';\r\nimport { ItemWrapper } from \"./style\";\r\nimport IconArrowLeft from '@/assets/svg/icon-arrow-left';\r\nimport IconArrowRight from '@/assets/svg/icon-arrow-right';\r\nimport Indicator from \"@/base-ui/indicator\";\r\nimport classNames from \"classnames\";\r\nconst RoomItem = memo((props) => {\r\n\r\n  const { itemData, itemWidth, itemClick } = props\r\n  const [selectIndex, setSelectIndex] = useState(0)\r\n  const sliderRef = useRef()\r\n  // 左右按钮事件\r\n  function controlClickHandle(isNext=true, event){\r\n    isNext ? sliderRef.current.next(): sliderRef.current.prev()\r\n    // 最新的索引\r\n    let newIndex = isNext ? selectIndex + 1: selectIndex - 1\r\n    const length = itemData.picture_urls.length\r\n    if (newIndex < 0) newIndex = length - 1\r\n    if (newIndex > length - 1) newIndex = 0\r\n    setSelectIndex(newIndex)\r\n    // 阻止冒泡，不然会触发转跳\r\n    event.stopPropagation()\r\n  }\r\n  // 元素点击，路由转跳 \r\n  function itemClickHandle(){\r\n    if (itemClick) itemClick(itemData)\r\n  }\r\n  const pictureElement = (\r\n    <div className=\"cover\">\r\n          <img src={itemData.picture_url} alt=\"\" />\r\n    </div>\r\n  )\r\n  const  sliderElement = (\r\n    <div className=\"slider\">\r\n      <div className='control'>\r\n        <div className='btn left' onClick={e => controlClickHandle(false, e)}>\r\n          <IconArrowLeft width=\"30\" height=\"30\"/>\r\n        </div>\r\n        <div className='btn right' onClick={e => controlClickHandle(true, e)}>\r\n          <IconArrowRight width=\"30\" height=\"30\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"indicator\">\r\n        <Indicator selectIndex={selectIndex}>\r\n          {\r\n            itemData?.picture_urls?.map((item, index) => {\r\n              return (\r\n                <div className=\"item\" key={item}>\r\n                  <span className={classNames(\"dot\", { active: selectIndex === index })}></span>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </Indicator>\r\n      </div>\r\n      <Carousel dots={false} ref={sliderRef}>\r\n      {\r\n          itemData?.picture_urls?.map(item => {\r\n            return (\r\n              <div className='cover' key={item}>\r\n                <img src={item} alt=\"\" />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </Carousel>\r\n    </div>\r\n  )\r\n  return (\r\n    <ItemWrapper \r\n    $verifyColor={itemData?.verify_info?.text_color || \"#39576a\"}\r\n    $itemWidth={itemWidth}\r\n    onClick={itemClickHandle}\r\n    >\r\n      <div className=\"inner\">\r\n        { !!itemData.picture_urls ? sliderElement : pictureElement}\r\n        <div className=\"desc\">{itemData.verify_info.messages.join(\" · \")}</div>\r\n        <div className=\"name\">{itemData.name}</div>\r\n        <div className=\"price\">¥{itemData.price}/晚</div>\r\n\r\n        <div className=\"bottom\">\r\n          <Rating\r\n            value={itemData.star_rating ?? 5}\r\n            precision={0.1}\r\n            readOnly\r\n            sx={{ fontSize: \"12px\", color: \"#00848A\", marginRight: \"-1px\" }}\r\n          />\r\n          <span className=\"count\">{itemData.reviews_count}</span>\r\n          {itemData.bottom_info && (\r\n            <span className=\"extra\">·{itemData.bottom_info?.content}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </ItemWrapper>\r\n  );\r\n});\r\n\r\nRoomItem.propTypes = {\r\n  itemData: PropTypes.object,\r\n};\r\n\r\nexport default RoomItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const EntireWrapper = styled.div`\r\n  \r\n`","import styled from \"styled-components\";\r\n\r\n\r\nexport const FilterWrapper = styled.div`\r\n  position: fixed;\r\n  z-index: 9;\r\n  top: 80px;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 48px;\r\n  padding-left: 16px;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  background-color: #fff;\r\n\r\n  .filter {\r\n    display: flex;\r\n\r\n    .item {\r\n      margin: 0 4px 0 8px;\r\n      padding: 6px 12px;\r\n      border: 1px solid #dce0e0;\r\n      border-radius: 4px;\r\n      color: #484848;\r\n      cursor: pointer;\r\n\r\n      &.active {\r\n        background: #008489;\r\n        border: 1px solid #008489;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n`","import PropTypes from 'prop-types'\r\nimport React, { memo, useState } from 'react'\r\nimport { FilterWrapper } from './style'\r\nimport filterData from \"@/assets/data/filter_data.json\"\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst EntireFilter = memo((props) => {\r\n    // 过滤按钮可以多选，所以使用数组\r\n    const [selectItems, setSelectItems] = useState([])\r\n    function itemClickHandle(item){\r\n        let newItems = [...selectItems]\r\n        if(newItems.includes(item)){\r\n            newItems = newItems.filter((val) => val !== item)\r\n        }else{\r\n            newItems.push(item)\r\n        }\r\n        setSelectItems(newItems)\r\n    }\r\n  return (\r\n    <FilterWrapper>\r\n        <div className='filter'>\r\n        {\r\n            filterData.map(item => {\r\n                return (\r\n                    <div className={classNames(\"item\", {active: selectItems.includes(item)})} \r\n                    onClick={(e)=>{itemClickHandle(item)}}\r\n                    key={item}\r\n                    >\r\n                        {item}\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n    </FilterWrapper>\r\n    \r\n  )\r\n})\r\n\r\nEntireFilter.propTypes = {}\r\n\r\nexport default EntireFilter","import { getEntireRoomList } from \"@/services/modules/entire\";\r\nimport * as actionTypes from \"./constans\";\r\n\r\nexport const changeCurrentPageAction = (currentPage) => ({\r\n    type: actionTypes.CHANGE_CURRENT_PAGE,\r\n    currentPage\r\n})\r\n\r\nexport const changeRoomListAction = (roomList) => ({\r\n    type: actionTypes.CHANGE_ROOM_LIST,\r\n    roomList\r\n})\r\n\r\nexport const changeTotalCountAction = (totalCount) => ({\r\n    type: actionTypes.CHANGE_TOTAL_COUNT,\r\n    totalCount\r\n  })\r\n  \r\n  \r\nexport const changeIsLoadingAction = (isLoading) => ({\r\ntype: actionTypes.CHANGE_IS_LOADING,\r\nisLoading\r\n})\r\n\r\n// action可以是一个函数，用来处理异步\r\nexport const fetchRoomListAction = (page=0) => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(changeCurrentPageAction(page))\r\n        // 发起异步请求数据\r\n        dispatch(changeIsLoadingAction(true))  //数据加载中\r\n        const res = await getEntireRoomList(page*20)\r\n        const roomList = res.list || []\r\n        const totalCount = res.totalCount\r\n        dispatch(changeRoomListAction(roomList))\r\n        dispatch(changeTotalCountAction(totalCount))\r\n        dispatch(changeIsLoadingAction(false))\r\n    }\r\n}","import fzRequest from \"..\"\r\nexport function getEntireRoomList(offset=0, size=20){\r\n    return fzRequest.get({\r\n        url: \"entire/list\",\r\n        params: {\r\n            offset,\r\n            size\r\n        }\r\n    })\r\n}","import styled from \"styled-components\";\n\n\nexport const RoomsWrapper = styled.div`\n  position: relative;\n  padding: 30px 20px;\n  margin-top: 128px;\n\n  .title {\n    font-size: 22px;\n    font-weight: 700;\n    color: #222;\n    margin: 0 0 10px 10px;\n  }\n\n  .list {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  > .cover {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    background-color: rgba(255,255,255,.8);\n  }\n`\n","import React, { memo, useCallback } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { RoomsWrapper } from './style'\r\nimport RoomItem from '@/components/room-item'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { changeDetailInfoAction } from '@/store/modules/detail'\r\n\r\nconst EntireRooms = memo((props) => {\r\n    // 从redux中拿数据\r\n    const { roomList, totalCount, isLoading} = useSelector((state) => ({\r\n        roomList: state.entire.roomList,\r\n        totalCount: state.entire.totalCount,\r\n        isLoading: state.entire.isLoading\r\n    }), shallowEqual)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const itemClickHanle= useCallback((itemData)=>{\r\n        dispatch(changeDetailInfoAction(itemData))\r\n        navigate(\"/detail\")\r\n    }, [navigate])\r\n  return (\r\n    <RoomsWrapper>\r\n        <h2 className='title'>{totalCount}多处住所</h2>\r\n        <div className='list'>\r\n        {\r\n            roomList.map((item) => {\r\n                return (\r\n                    <RoomItem \r\n                    itemData={item}\r\n                    itemWidth=\"20%\"\r\n                    key={item._id}\r\n                    itemClick={itemClickHanle}\r\n                    ></RoomItem>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n        {isLoading && <div className='cover'></div>}\r\n    </RoomsWrapper>\r\n  )\r\n})\r\n\r\n\r\nexport default EntireRooms","import { styled } from \"styled-components\";\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  .info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .MuiPaginationItem-icon {\r\n      font-size: 24px;\r\n    }\r\n\r\n    .MuiPaginationItem-page {\r\n      margin: 0 9px;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n\r\n    .MuiPaginationItem-page.Mui-selected {\r\n      background-color: #222;\r\n      color: #fff;\r\n    }\r\n\r\n    .desc {\r\n      margin-top: 16px;\r\n      color: #222;\r\n    }\r\n  }\r\n`","import React, { memo } from 'react'\r\nimport { Pagination } from \"@mui/material\";\r\nimport { PaginationWrapper } from './style'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { fetchRoomListAction } from '@/store/modules/entire/actionCreators';\r\n\r\nconst EntirePagination = memo((props) => {\r\n    const {totalCount, currentPage, roomList} = useSelector((state) => ({\r\n        totalCount: state.entire.totalCount,\r\n        currentPage: state.entire.currentPage,\r\n        roomList: state.entire.roomList\r\n    }), shallowEqual)\r\n\r\n    const totalPage = Math.ceil(totalCount / 20)\r\n    const startCount = currentPage * 20 + 1\r\n    const endCount = (currentPage + 1) * 20\r\n    // 切换页码事件\r\n    const dispatch = useDispatch()\r\n    function pageChangeHandle(event, pageNumber){\r\n        // 回到顶部\r\n        window.scrollTo(0, 0)\r\n        // 更新页码及对应数据\r\n        dispatch(fetchRoomListAction(pageNumber-1))\r\n    }\r\n\r\n  return (\r\n    <PaginationWrapper>\r\n        {\r\n            !!roomList.length && (\r\n                <div className='info'>\r\n                    <Pagination count={totalPage} onChange={pageChangeHandle}></Pagination>\r\n                    <div className='desc'>\r\n                        第 {startCount} - {endCount} 个房源, 共超过 {totalCount} 个\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    </PaginationWrapper>\r\n  )\r\n})\r\n\r\nexport default EntirePagination","import React, { memo, useEffect } from 'react'\r\nimport { EntireWrapper } from './style'\r\nimport EntireFilter from './c-cpns/entire-filter'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchRoomListAction } from '@/store/modules/entire/actionCreators'\r\nimport EntireRooms from './c-cpns/entire-rooms'\r\nimport EntirePagination from './c-cpns/entire-pagination'\r\nimport AppHeader from '@/components/app-header'\r\nimport { changeHeaderConfigAction } from '@/store/modules/main'\r\n\r\nconst Entire = memo(() => {\r\n  // 派发action，请求数据并保存到store\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchRoomListAction())\r\n    dispatch(changeHeaderConfigAction({isFixed: true, topAlpha: false}))\r\n    // dispatch()\r\n  }, [dispatch])\r\n  return (\r\n    <EntireWrapper>\r\n      <AppHeader/>\r\n       <EntireFilter/>\r\n       <EntireRooms/>\r\n       <EntirePagination/>\r\n    </EntireWrapper>\r\n  )\r\n})\r\n\r\nexport default Entire"],"names":["ItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","$itemWidth","$verifyColor","theme","text","primaryColor","memo","_itemData$picture_url","_itemData$picture_url2","_itemData$verify_info","_itemData$star_rating","_itemData$bottom_info","itemData","itemWidth","itemClick","selectIndex","setSelectIndex","useState","sliderRef","useRef","controlClickHandle","isNext","arguments","length","undefined","event","current","next","prev","newIndex","picture_urls","stopPropagation","pictureElement","_jsx","className","children","src","picture_url","alt","sliderElement","_jsxs","onClick","e","IconArrowLeft","width","height","IconArrowRight","Indicator","map","item","index","classNames","active","Carousel","dots","ref","verify_info","text_color","messages","join","name","price","Rating","value","star_rating","precision","readOnly","sx","fontSize","color","marginRight","reviews_count","bottom_info","content","EntireWrapper","FilterWrapper","selectItems","setSelectItems","filterData","includes","newItems","filter","val","push","itemClickHandle","changeIsLoadingAction","isLoading","type","actionTypes","fetchRoomListAction","page","async","dispatch","getState","currentPage","res","offset","size","fzRequest","get","url","params","getEntireRoomList","roomList","list","totalCount","changeRoomListAction","changeTotalCountAction","RoomsWrapper","useSelector","state","entire","shallowEqual","navigate","useNavigate","useDispatch","itemClickHanle","useCallback","changeDetailInfoAction","RoomItem","_id","PaginationWrapper","totalPage","Math","ceil","startCount","endCount","Pagination","count","onChange","pageNumber","window","scrollTo","useEffect","changeHeaderConfigAction","isFixed","topAlpha","AppHeader","EntireFilter","EntireRooms","EntirePagination"],"sourceRoot":""}